# Generated by Django 5.2.3 on 2025-06-20 22:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('progress', '0004_alter_progressprofile_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('default_enabled', models.BooleanField(default=True)),
                ('can_disable', models.BooleanField(default=True)),
                ('icon', models.CharField(default='ðŸ””', max_length=50)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('data_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON')], default='string', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['key'],
            },
        ),
        migrations.CreateModel(
            name='LeaderboardType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('leaderboard_type', models.CharField(choices=[('global', 'Global'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('category', 'Category-based'), ('friends', 'Friends Only'), ('company', 'Company/Team')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('reset_frequency', models.CharField(choices=[('never', 'Never'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='never', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='progress.category')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MissionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('mission_type', models.CharField(choices=[('task_count', 'Complete X Tasks'), ('category_focus', 'Complete X Tasks in Category'), ('streak', 'Maintain X Day Streak'), ('timing', 'Complete X Tasks Early/On Time'), ('difficulty', 'Complete X Hard/Expert Tasks'), ('xp_target', 'Earn X XP'), ('daily_goal', 'Complete Daily Goal'), ('weekly_challenge', 'Weekly Challenge')], max_length=20)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard'), ('legendary', 'Legendary')], max_length=20)),
                ('target_value', models.IntegerField(help_text='Target number to achieve')),
                ('duration_days', models.IntegerField(default=7, help_text='Days to complete mission')),
                ('xp_reward', models.IntegerField()),
                ('bonus_multiplier', models.FloatField(default=1.0)),
                ('min_user_level', models.IntegerField(default=0)),
                ('max_user_level', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_repeatable', models.BooleanField(default=True)),
                ('weight', models.IntegerField(default=1, help_text='Selection probability weight')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='progress.category')),
            ],
            options={
                'ordering': ['difficulty', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserNotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True)),
                ('email_task_reminders', models.BooleanField(default=True)),
                ('email_mission_updates', models.BooleanField(default=True)),
                ('email_achievement_unlocks', models.BooleanField(default=True)),
                ('email_leaderboard_updates', models.BooleanField(default=False)),
                ('email_weekly_summary', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('push_task_reminders', models.BooleanField(default=True)),
                ('push_mission_updates', models.BooleanField(default=True)),
                ('push_achievement_unlocks', models.BooleanField(default=True)),
                ('push_leaderboard_updates', models.BooleanField(default=False)),
                ('reminder_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='daily', max_length=20)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeaderboardEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('rank', models.IntegerField(default=0)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('tasks_completed', models.IntegerField(default=0)),
                ('total_xp', models.IntegerField(default=0)),
                ('streak_count', models.IntegerField(default=0)),
                ('punctuality_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_entries', to=settings.AUTH_USER_MODEL)),
                ('leaderboard_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='progress.leaderboardtype')),
            ],
            options={
                'ordering': ['-score', '-updated_at'],
                'indexes': [models.Index(fields=['leaderboard_type', '-score'], name='progress_le_leaderb_6d10ab_idx'), models.Index(fields=['user', '-created_at'], name='progress_le_user_id_44abf1_idx')],
                'unique_together': {('leaderboard_type', 'user', 'period_start')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('is_read', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('action_url', models.URLField(blank=True)),
                ('action_text', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_via_email', models.BooleanField(default=False)),
                ('delivered_via_push', models.BooleanField(default=False)),
                ('email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('push_sent_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='progress_no_user_id_4a2978_idx'), models.Index(fields=['user', 'is_read'], name='progress_no_user_id_47fd5a_idx'), models.Index(fields=['notification_type', '-created_at'], name='progress_no_notific_29abd9_idx')],
            },
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('data', models.JSONField(blank=True, default=dict)),
                ('scheduled_for', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('send_email', models.BooleanField(default=False)),
                ('send_push', models.BooleanField(default=True)),
                ('attempts', models.IntegerField(default=0)),
                ('max_attempts', models.IntegerField(default=3)),
                ('last_attempt_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['scheduled_for'],
                'indexes': [models.Index(fields=['status', 'scheduled_for'], name='progress_no_status_5a62b5_idx'), models.Index(fields=['user', 'scheduled_for'], name='progress_no_user_id_4c009e_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserFriendship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('blocked', 'Blocked')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_of', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'friend')},
            },
        ),
        migrations.CreateModel(
            name='UserMission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('target_value', models.IntegerField()),
                ('current_progress', models.IntegerField(default=0)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('failed', 'Failed'), ('abandoned', 'Abandoned')], default='active', max_length=20)),
                ('xp_reward', models.IntegerField()),
                ('bonus_multiplier', models.FloatField(default=1.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='progress.category')),
                ('related_tasks', models.ManyToManyField(blank=True, related_name='missions', to='progress.task')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='progress.missiontemplate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='missions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='progress_us_user_id_5645a3_idx'), models.Index(fields=['status', '-end_date'], name='progress_us_status_9afd50_idx')],
            },
        ),
    ]
